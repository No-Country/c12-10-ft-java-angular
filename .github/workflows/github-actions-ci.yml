name: Build and Push Container

on:
  push:
    branches:
      - main

env:
  REGISTRY: ${{ secrets.REGISTRY_LOGIN_SERVER }}.azurecr.io
  IMAGE_NAME: frontend
  TAG: latest
  AZURE_LOGIN: ${{ secrets.AZURE_LOGIN }}
  AZURE_PASSWORD: ${{ secrets.AZURE_PASSWORD }}
  AZURE_REGISTRY: ${{ secrets.REGISTRY_LOGIN_SERVER }}.azurecr.io

jobs:
  build-and-push:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: 'Build and push frontend image'
        uses: azure/docker-login@v1
        with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}.azurecr.io
            username: ${{ secrets.AZURE_LOGIN }}
            password: ${{ secrets.AZURE_PASSWORD }}
      - run: |
           docker build ./FrontEnd -t ${{ secrets.REGISTRY_LOGIN_SERVER }}.azurecr.io/frontend:latest
           docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}.azurecr.io/frontend:latest
      - name: 'Build and push backend image'
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build Java app with Maven
        run: cd BackEnd && mvn clean package
             echo "spring.data.mongodb.uri=${{ secrets.MONGODB_URI }}" > env.properties
             echo spring.data.mongodb.database=bd_airbnb > env.properties
             echo server.port:8082 >env.properties

      - name: 'Build and push backend image'
        uses: azure/docker-login@v1
        with:
               login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}.azurecr.io
               username: ${{ secrets.AZURE_LOGIN }}
               password: ${{ secrets.AZURE_PASSWORD }}
      - run: |
              docker build ./BackEnd -t ${{ secrets.REGISTRY_LOGIN_SERVER }}.azurecr.io/backend:latest
              docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}.azurecr.io/backend:latest           



  
    #docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend:latest
    # steps:
    #   - name: Checkout repository
    #     uses: actions/checkout@v2

    #   - name: Set up Docker Buildx
    #     uses: docker/setup-buildx-action@v1

    #   - name: Login to Azure Container Registry
    #     run: |
    #       docker login $REGISTRY -u $AZURE_LOGIN -p $AZURE_PASSWORD

    #   - name: Build and push container
    #     run: |
    #       docker buildx create --use
    #       docker buildx build --push --platform linux/amd64,linux/arm64 -t $REGISTRY/$IMAGE_NAME:$TAG .